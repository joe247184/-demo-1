{"id":"main.c39d6dcf.js","dependencies":[{"name":"C:\\Users\\86184\\Desktop\\é¥¥äººè°·è½¯ä»¶\\TSé¡¹ç›®ç»ƒä¹ \\demo1-1\\dist\\main.c39d6dcf.js.map","includedInParent":true,"mtime":1591457290899},{"name":"C:\\Users\\86184\\Desktop\\é¥¥äººè°·è½¯ä»¶\\TSé¡¹ç›®ç»ƒä¹ \\demo1-1\\package.json","includedInParent":true,"mtime":1591457289591}],"generated":{"js":"var define;\nvar global = arguments[3];\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\nparcelRequire = function (modules, cache, entry, globalName) {\n  // Save the require from previous bundle to this closure if any\n  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;\n  var nodeRequire = typeof require === 'function' && require;\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;\n\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        } // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n\n\n        if (previousRequire) {\n          return previousRequire(name, true);\n        } // Try the node require function if it exists.\n\n\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error('Cannot find module \\'' + name + '\\'');\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n      var module = cache[name] = new newRequire.Module(name);\n      modules[name][0].call(module.exports, localRequire, module, module.exports, this);\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      return newRequire(localRequire.resolve(x));\n    }\n\n    function resolve(x) {\n      return modules[name][1][x] || x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n\n  newRequire.register = function (id, exports) {\n    modules[id] = [function (require, module) {\n      module.exports = exports;\n    }, {}];\n  };\n\n  var error;\n\n  for (var i = 0; i < entry.length; i++) {\n    try {\n      newRequire(entry[i]);\n    } catch (e) {\n      // Save first error but execute all entries\n      if (!error) {\n        error = e;\n      }\n    }\n  }\n\n  if (entry.length) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(entry[entry.length - 1]); // CommonJS\n\n    if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === \"object\" && typeof module !== \"undefined\") {\n      module.exports = mainExports; // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n      define(function () {\n        return mainExports;\n      }); // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  } // Override the current require with this new one\n\n\n  parcelRequire = newRequire;\n\n  if (error) {\n    // throw error from earlier, _after updating parcelRequire_\n    throw error;\n  }\n\n  return newRequire;\n}({\n  \"main.ts\": [function (require, module, exports) {\n    var div = document.createElement('div');\n    div.style.border = '1px solid red';\n    div.style.height = '100px';\n    div.style.width = '100px';\n    div.style.top = 'auto';\n    div.id = 'demo';\n    document.body.appendChild(div);\n    var X = false;\n    var position = [0, 0];\n\n    div.onmousedown = function (e) {\n      X = true;\n      position = [e.clientX, e.clientY];\n    };\n\n    document.onmousemove = function (e) {\n      if (X === true) {\n        var deltaX = e.clientX - position[0];\n        var deltaY = e.clientY - position[1];\n        var top = parseInt(div.style.top) || 0;\n        var left = parseInt(div.style.left) || 0;\n        div.style.top = top + deltaY + 'px';\n        div.style.left = left + deltaX + 'px';\n        position = [e.clientX, e.clientY];\n      }\n    };\n\n    document.onmouseup = function (e) {\n      X = false;\n    };\n  }, {}],\n  \"../../../AppData/Roaming/npm-cache/_npx/13976/node_modules/parcel/src/builtins/hmr-runtime.js\": [function (require, module, exports) {\n    var global = arguments[3];\n    var OVERLAY_ID = '__parcel__error__overlay__';\n    var OldModule = module.bundle.Module;\n\n    function Module(moduleName) {\n      OldModule.call(this, moduleName);\n      this.hot = {\n        data: module.bundle.hotData,\n        _acceptCallbacks: [],\n        _disposeCallbacks: [],\n        accept: function accept(fn) {\n          this._acceptCallbacks.push(fn || function () {});\n        },\n        dispose: function dispose(fn) {\n          this._disposeCallbacks.push(fn);\n        }\n      };\n      module.bundle.hotData = null;\n    }\n\n    module.bundle.Module = Module;\n    var checkedAssets, assetsToAccept;\n    var parent = module.bundle.parent;\n\n    if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n      var hostname = \"\" || location.hostname;\n      var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n      var ws = new WebSocket(protocol + '://' + hostname + ':' + \"58970\" + '/');\n\n      ws.onmessage = function (event) {\n        checkedAssets = {};\n        assetsToAccept = [];\n        var data = JSON.parse(event.data);\n\n        if (data.type === 'update') {\n          var handled = false;\n          data.assets.forEach(function (asset) {\n            if (!asset.isNew) {\n              var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n\n              if (didAccept) {\n                handled = true;\n              }\n            }\n          }); // Enable HMR for CSS by default.\n\n          handled = handled || data.assets.every(function (asset) {\n            return asset.type === 'css' && asset.generated.js;\n          });\n\n          if (handled) {\n            console.clear();\n            data.assets.forEach(function (asset) {\n              hmrApply(global.parcelRequire, asset);\n            });\n            assetsToAccept.forEach(function (v) {\n              hmrAcceptRun(v[0], v[1]);\n            });\n          } else if (location.reload) {\n            // `location` global exists in a web worker context but lacks `.reload()` function.\n            location.reload();\n          }\n        }\n\n        if (data.type === 'reload') {\n          ws.close();\n\n          ws.onclose = function () {\n            location.reload();\n          };\n        }\n\n        if (data.type === 'error-resolved') {\n          console.log('[parcel] âœ¨ Error resolved');\n          removeErrorOverlay();\n        }\n\n        if (data.type === 'error') {\n          console.error('[parcel] ðŸš¨  ' + data.error.message + '\\n' + data.error.stack);\n          removeErrorOverlay();\n          var overlay = createErrorOverlay(data);\n          document.body.appendChild(overlay);\n        }\n      };\n    }\n\n    function removeErrorOverlay() {\n      var overlay = document.getElementById(OVERLAY_ID);\n\n      if (overlay) {\n        overlay.remove();\n      }\n    }\n\n    function createErrorOverlay(data) {\n      var overlay = document.createElement('div');\n      overlay.id = OVERLAY_ID; // html encode message and stack trace\n\n      var message = document.createElement('div');\n      var stackTrace = document.createElement('pre');\n      message.innerText = data.error.message;\n      stackTrace.innerText = data.error.stack;\n      overlay.innerHTML = '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' + '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' + '<span style=\"top: 2px; margin-left: 5px; position: relative;\">ðŸš¨</span>' + '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';\n      return overlay;\n    }\n\n    function getParents(bundle, id) {\n      var modules = bundle.modules;\n\n      if (!modules) {\n        return [];\n      }\n\n      var parents = [];\n      var k, d, dep;\n\n      for (k in modules) {\n        for (d in modules[k][1]) {\n          dep = modules[k][1][d];\n\n          if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n            parents.push(k);\n          }\n        }\n      }\n\n      if (bundle.parent) {\n        parents = parents.concat(getParents(bundle.parent, id));\n      }\n\n      return parents;\n    }\n\n    function hmrApply(bundle, asset) {\n      var modules = bundle.modules;\n\n      if (!modules) {\n        return;\n      }\n\n      if (modules[asset.id] || !bundle.parent) {\n        var fn = new Function('require', 'module', 'exports', asset.generated.js);\n        asset.isNew = !modules[asset.id];\n        modules[asset.id] = [fn, asset.deps];\n      } else if (bundle.parent) {\n        hmrApply(bundle.parent, asset);\n      }\n    }\n\n    function hmrAcceptCheck(bundle, id) {\n      var modules = bundle.modules;\n\n      if (!modules) {\n        return;\n      }\n\n      if (!modules[id] && bundle.parent) {\n        return hmrAcceptCheck(bundle.parent, id);\n      }\n\n      if (checkedAssets[id]) {\n        return;\n      }\n\n      checkedAssets[id] = true;\n      var cached = bundle.cache[id];\n      assetsToAccept.push([bundle, id]);\n\n      if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n        return true;\n      }\n\n      return getParents(global.parcelRequire, id).some(function (id) {\n        return hmrAcceptCheck(global.parcelRequire, id);\n      });\n    }\n\n    function hmrAcceptRun(bundle, id) {\n      var cached = bundle.cache[id];\n      bundle.hotData = {};\n\n      if (cached) {\n        cached.hot.data = bundle.hotData;\n      }\n\n      if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n        cached.hot._disposeCallbacks.forEach(function (cb) {\n          cb(bundle.hotData);\n        });\n      }\n\n      delete bundle.cache[id];\n      bundle(id);\n      cached = bundle.cache[id];\n\n      if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n        cached.hot._acceptCallbacks.forEach(function (cb) {\n          cb();\n        });\n\n        return true;\n      }\n    }\n  }, {}]\n}, {}, [\"../../../AppData/Roaming/npm-cache/_npx/13976/node_modules/parcel/src/builtins/hmr-runtime.js\", \"main.ts\"], null);"},"sourceMaps":{"js":{"mappings":[{"source":"main.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":5,"column":0}},{"source":"main.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":6,"column":0}},{"source":"main.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":7,"column":0}},{"source":"main.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":8,"column":0}},{"source":"main.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":9,"column":0}},{"source":"main.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":10,"column":0}},{"source":"main.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":11,"column":0}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":12,"column":0}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":12,"column":13}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":12,"column":16}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":12,"column":26}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":12,"column":33}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":12,"column":35}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":12,"column":40}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":12,"column":42}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":12,"column":47}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":12,"column":49}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":12,"column":59}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":12,"column":61}},{"source":"main.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":13,"column":0}},{"source":"main.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":15,"column":0}},{"source":"main.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":15,"column":6}},{"source":"main.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":15,"column":17}},{"source":"main.ts","name":null,"original":{"line":12,"column":18},"generated":{"line":15,"column":20}},{"source":"main.ts","name":null,"original":{"line":12,"column":18},"generated":{"line":15,"column":27}},{"source":"main.ts","name":null,"original":{"line":12,"column":18},"generated":{"line":15,"column":34}},{"source":"main.ts","name":null,"original":{"line":12,"column":20},"generated":{"line":15,"column":39}},{"source":"main.ts","name":null,"original":{"line":12,"column":18},"generated":{"line":15,"column":49}},{"source":"main.ts","name":null,"original":{"line":12,"column":20},"generated":{"line":15,"column":53}},{"source":"main.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":15,"column":60}},{"source":"main.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":17,"column":0}},{"source":"main.ts","name":null,"original":{"line":14,"column":12},"generated":{"line":17,"column":11}},{"source":"main.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":17,"column":21}},{"source":"main.ts","name":null,"original":{"line":14,"column":18},"generated":{"line":17,"column":22}},{"source":"main.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":17,"column":26}},{"source":"main.ts","name":null,"original":{"line":14,"column":29},"generated":{"line":17,"column":28}},{"source":"main.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":17,"column":34}},{"source":"main.ts","name":null,"original":{"line":14,"column":4},"generated":{"line":17,"column":36}},{"source":"main.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":18,"column":0}},{"source":"main.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":18,"column":8}},{"source":"main.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":18,"column":9}},{"source":"main.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":18,"column":14}},{"source":"main.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":18,"column":15}},{"source":"main.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":18,"column":19}},{"source":"main.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":18,"column":20}},{"source":"main.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":18,"column":22}},{"source":"main.ts","name":null,"original":{"line":16,"column":8},"generated":{"line":20,"column":0}},{"source":"main.ts","name":null,"original":{"line":17,"column":9},"generated":{"line":21,"column":0}},{"source":"main.ts","name":null,"original":{"line":18,"column":12},"generated":{"line":22,"column":0}},{"source":"main.ts","name":null,"original":{"line":19,"column":12},"generated":{"line":23,"column":0}},{"source":"main.ts","name":null,"original":{"line":19,"column":12},"generated":{"line":23,"column":12}},{"source":"main.ts","name":null,"original":{"line":19,"column":21},"generated":{"line":23,"column":26}},{"source":"main.ts","name":null,"original":{"line":19,"column":33},"generated":{"line":23,"column":29}},{"source":"main.ts","name":null,"original":{"line":19,"column":33},"generated":{"line":23,"column":36}},{"source":"main.ts","name":null,"original":{"line":19,"column":33},"generated":{"line":23,"column":49}},{"source":"main.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":23,"column":54}},{"source":"main.ts","name":null,"original":{"line":19,"column":33},"generated":{"line":23,"column":64}},{"source":"main.ts","name":null,"original":{"line":19,"column":8},"generated":{"line":23,"column":68}},{"source":"main.ts","name":null,"original":{"line":19,"column":12},"generated":{"line":23,"column":81}},{"source":"main.ts","name":null,"original":{"line":20,"column":12},"generated":{"line":25,"column":0}},{"source":"main.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":25,"column":12}},{"source":"main.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":25,"column":13}},{"source":"main.ts","name":null,"original":{"line":20,"column":15},"generated":{"line":25,"column":19}},{"source":"main.ts","name":null,"original":{"line":20,"column":27},"generated":{"line":25,"column":23}},{"source":"main.ts","name":null,"original":{"line":20,"column":12},"generated":{"line":25,"column":37}},{"source":"main.ts","name":null,"original":{"line":20,"column":18},"generated":{"line":25,"column":39}},{"source":"main.ts","name":null,"original":{"line":21,"column":12},"generated":{"line":26,"column":0}},{"source":"main.ts","name":null,"original":{"line":21,"column":19},"generated":{"line":26,"column":17}},{"source":"main.ts","name":null,"original":{"line":21,"column":32},"generated":{"line":26,"column":31}},{"source":"main.ts","name":null,"original":{"line":21,"column":32},"generated":{"line":26,"column":32}},{"source":"main.ts","name":null,"original":{"line":21,"column":32},"generated":{"line":26,"column":36}},{"source":"main.ts","name":null,"original":{"line":21,"column":27},"generated":{"line":26,"column":38}},{"source":"main.ts","name":null,"original":{"line":21,"column":32},"generated":{"line":26,"column":42}},{"source":"main.ts","name":null,"original":{"line":21,"column":12},"generated":{"line":26,"column":43}},{"source":"main.ts","name":null,"original":{"line":22,"column":12},"generated":{"line":27,"column":0}},{"source":"main.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":27,"column":10}},{"source":"main.ts","name":null,"original":{"line":25,"column":5},"generated":{"line":28,"column":0}},{"source":"main.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":29,"column":0}},{"source":"main.ts","name":null,"original":{"line":27,"column":8},"generated":{"line":33,"column":0}},{"source":"main.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":33,"column":12}},{"source":"main.ts","name":null,"original":{"line":27,"column":8},"generated":{"line":33,"column":27}},{"source":"main.ts","name":null,"original":{"line":27,"column":21},"generated":{"line":33,"column":29}},{"source":"main.ts","name":null,"original":{"line":28,"column":8},"generated":{"line":34,"column":0}},{"source":"main.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":17}},{"source":"main.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":32}},{"source":"main.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":33}},{"source":"main.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":37}},{"source":"main.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":39}},{"source":"main.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":34,"column":43}},{"source":"main.ts","name":null,"original":{"line":28,"column":8},"generated":{"line":34,"column":44}},{"source":"main.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":35,"column":0}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":109,"column":3}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":120,"column":1}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":358,"column":1}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":358,"column":5}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":358,"column":115}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":358,"column":121}},{"source":"main.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":358,"column":122}}],"sources":{"main.ts":"var div = document.createElement('div')\r\ndiv.style.border = '1px solid red';\r\ndiv.style.height = '100px';\r\ndiv.style.width = '100px';\r\ndiv.style.top = 'auto'\r\ndiv.id = 'demo';\r\ndocument.body.appendChild(div)\r\n\r\nvar X = false;\r\nvar position = [0, 0]\r\n\r\ndiv.onmousedown = (e) => {\r\n    X = true\r\n    position = [e.clientX, e.clientY]\r\n}\r\ndocument.onmousemove = (e) => {\r\n    if (X === true) {\r\n        var deltaX = e.clientX - position[0];\r\n        var deltaY = e.clientY - position[1];\r\n        var top = parseInt(div.style.top!) || 0\r\n        var left = parseInt(div.style.left!) || 0\r\n        div.style.top = top + deltaY + 'px';\r\n        div.style.left = left + deltaX + 'px';\r\n        position = [e.clientX, e.clientY]\r\n    }\r\n}\r\ndocument.onmouseup = (e) => {\r\n    X = false\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"452a3262352ec713f11187870b1bc8c3","cacheData":{"env":{}}}